{"version":3,"sources":["actions/actiontypes.js","reducers/index.js","components/logo.png","components/banner.jsx","actions/index.js","actions/fetchPeople.js","components/people.jsx","actions/fetchShips.js","components/ships.jsx","components/pagination.jsx","actions/fetchCharacter.js","components/character.jsx","actions/fetchStarship.js","components/starship.jsx","components/footer.jsx","App.js","index.js"],"names":["LOAD_PEOPLE","LOAD_SHIPS","LOAD_CHARACTER","LOAD_STARSHIP","LOAD_ERROR","initialState","swapi","getPeople","state","people","getShips","ships","getCharacter","character","getStarship","starship","SwapiReducer","action","type","error","Banner","className","src","logo","alt","Component","loadError","fetchPeople","page","dispatch","onSuccess","peopleArray","onError","fetch","then","data","json","d","results","map","person","name","height","mass","birth_year","url","substring","catch","People","this","props","color","width","ini","item","end","slice","class","to","connect","bindActionCreators","fetchPeopleAction","fetchShips","shipsArray","ship","model","starship_class","Ships","fetchShipsAction","Pagination","onNext","onPrevious","onClick","fetchCharacter","id","characterArray","hair_color","skin_color","eye_color","gender","Character","match","params","fetchCharacterAction","fetchStarship","starshipArray","Starship","fetchStarshipAction","Footer","href","App","handleNext","setState","handlePrevious","exact","path","render","Fragment","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fea3ea8.chunk.js","sourcesContent":["export const LOAD_PEOPLE = 'LOAD_PEOPLE'\r\nexport const LOAD_SHIPS = 'LOAD_SHIPS'\r\nexport const LOAD_CHARACTER = 'LOAD_CHARACTER'\r\nexport const LOAD_STARSHIP = 'LOAD_STARSHIP'\r\nexport const LOAD_ERROR = 'LOAD_ERROR'","import { LOAD_PEOPLE } from '../actions/actiontypes';\r\nimport { LOAD_SHIPS } from '../actions/actiontypes';\r\nimport { LOAD_CHARACTER } from '../actions/actiontypes';\r\nimport { LOAD_STARSHIP } from '../actions/actiontypes';\r\nimport { LOAD_ERROR } from '../actions/actiontypes';\r\n\r\n\r\nconst initialState = {\r\n      swapi: [],\r\n}\r\n\r\nfunction SwapiReducer(state = initialState, action) {\r\n\r\n      switch (action.type) {\r\n            case LOAD_PEOPLE:\r\n                  if (state.people == null) {\r\n                        return {\r\n                              ...state,\r\n                              people: action.people\r\n                        }\r\n                  } else {\r\n                        return {\r\n                              ...state,\r\n                              people: [...state.people, ...action.people]\r\n                        }\r\n                  }\r\n            case LOAD_SHIPS:\r\n                  return {\r\n                        ...state,\r\n                        ships: action.ships\r\n                  }\r\n            case LOAD_CHARACTER:\r\n                  return {\r\n                        ...state,\r\n                        character: action.character\r\n                  }\r\n            case LOAD_STARSHIP:\r\n                  return {\r\n                        ...state,\r\n                        starship: action.starship\r\n                  }\r\n            case LOAD_ERROR:\r\n                  return {\r\n                        ...state,\r\n                        error: action.error\r\n                  }\r\n            default:\r\n                  return state;\r\n      }\r\n}\r\n\r\nexport const getPeople = state => state.people;\r\nexport const getShips = state => state.ships;\r\nexport const getCharacter = state => state.character;\r\nexport const getStarship = state => state.starship;\r\n\r\nexport default SwapiReducer;","export default __webpack_public_path__ + \"static/media/logo.206d045b.png\";","import React, { Component } from \"react\";\r\nimport logo from './logo.png';\r\n\r\nclass Banner extends Component {\r\n      state = {};\r\n      render() {\r\n            return (\r\n                  <div className='banner'>\r\n                       <img src={logo} alt='logo' />\r\n                  </div>\r\n            );\r\n      }\r\n}\r\n\r\nexport default Banner;","import { LOAD_PEOPLE } from './actiontypes';\r\nimport { LOAD_SHIPS } from './actiontypes';\r\nimport { LOAD_CHARACTER } from './actiontypes';\r\nimport { LOAD_STARSHIP } from './actiontypes';\r\nimport { LOAD_ERROR } from './actiontypes';\r\n\r\n\r\nexport function loadPeople(people) {\r\n    return {\r\n        type: LOAD_PEOPLE,\r\n        people: people\r\n    }\r\n}\r\n\r\nexport function loadShips(ships) {\r\n    return {\r\n        type: LOAD_SHIPS,\r\n        ships: ships\r\n    }\r\n}\r\n\r\nexport function loadCharacter(character) {\r\n    return {\r\n        type: LOAD_CHARACTER,\r\n        character: character\r\n    }\r\n}\r\n\r\nexport function loadStarship(starship) {\r\n    return {\r\n        type: LOAD_STARSHIP,\r\n        starship: starship\r\n    }\r\n}\r\n\r\nexport function loadError(error) {\r\n    return {\r\n        type: LOAD_ERROR,\r\n        error: error\r\n    }\r\n}","import { loadPeople } from './index';\r\nimport { loadError } from './index';\r\n\r\nfunction fetchPeople(page) {\r\n\r\n      return dispatch => {\r\n\r\n            function onSuccess(peopleArray) {\r\n                  dispatch(loadPeople(peopleArray));\r\n                  return peopleArray;\r\n            }\r\n\r\n            function onError(error) {\r\n                  dispatch(loadError(error));\r\n                  return error;\r\n            }\r\n\r\n            try {\r\n\r\n                  fetch('https://swapi.dev/api/people/?page=' + page)\r\n\r\n                        // Access with success, put the information in data\r\n                        .then(data => data.json())\r\n\r\n                        // Format each data to the format array line to show\r\n                        .then(d => {\r\n\r\n                              let peopleArray = d.results.map((person) => {\r\n\r\n                                    return (\r\n                                          [\r\n                                                person.name,\r\n                                                person.height,\r\n                                                person.mass,\r\n                                                person.birth_year,\r\n                                                person.url.substring(28),\r\n                                          ]\r\n                                    )\r\n\r\n                              });\r\n\r\n                              return onSuccess(peopleArray);\r\n                        })\r\n                        // Error\r\n                        .catch(error => {\r\n                              onError(error);\r\n                        })\r\n            }\r\n\r\n            catch (error) {\r\n                  return onError(error);\r\n            }\r\n      }\r\n}\r\n\r\nexport default fetchPeople;","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport fetchPeopleAction from '../actions/fetchPeople';\r\nimport { getPeople } from '../reducers/index';\r\nimport Loader from 'react-loader-spinner'\r\n\r\nclass People extends Component {\r\n\r\n      componentDidMount() {\r\n            const { fetchPeople } = this.props;\r\n            fetchPeople(1);\r\n            fetchPeople(2);\r\n            fetchPeople(3);\r\n            fetchPeople(4);\r\n            fetchPeople(5);\r\n            fetchPeople(6);\r\n            fetchPeople(7);\r\n            fetchPeople(8);\r\n      }\r\n\r\n      render() {\r\n\r\n            const { people } = this.props;\r\n\r\n            if (!people) {\r\n                  return (\r\n                        <Loader type='ThreeDots' color='#F4DC39' height={40} width={40} />\r\n                  )\r\n            }\r\n\r\n            let ini = this.props.item * 8;\r\n            let end = ini + 8;\r\n\r\n            return (\r\n                  <div className='list'>\r\n                        {people.slice(ini, end).map(person => (\r\n                              <ul key={person[4]}>\r\n                                    <li >\r\n                                          <i class=\"far fa-user fa-2x\"></i>\r\n                                          <h3><Link className=\"link-style\" to={`/character/${person[4]}`}>{person[0]}</Link></h3>\r\n                                          <h4> Height: {person[1]} </h4>\r\n                                          <h4> Mass: {person[2]} </h4>\r\n                                          <h4> Birth Year: {person[3]} </h4>\r\n                                    </li>\r\n                              </ul>\r\n                        ))}\r\n                  </div>\r\n            );\r\n      }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n      people: getPeople(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n      fetchPeople: fetchPeopleAction\r\n}, dispatch)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(People);","import { loadShips } from './index';\r\nimport { loadError } from './index';\r\n\r\nfunction fetchShips() {\r\n\r\n      return dispatch => {\r\n\r\n            function onSuccess(shipsArray) {\r\n                  dispatch(loadShips(shipsArray));\r\n                  return shipsArray;\r\n            }\r\n\r\n            function onError(error) {\r\n                  dispatch(loadError(error));\r\n                  return error;\r\n            }\r\n\r\n            try {\r\n                  fetch('https://swapi.dev/api/starships/')\r\n\r\n                        // Access with success, put the information in data\r\n                        .then(data => data.json())\r\n\r\n                        // Format each data to the format array line to show\r\n                        .then(d => {\r\n\r\n                              let shipsArray = d.results.map((ship) => {\r\n\r\n                                    return (\r\n                                          [\r\n                                                ship.name,\r\n                                                ship.model,\r\n                                                ship.starship_class,\r\n                                                ship.url.substring(31),\r\n                                          ]\r\n                                    )\r\n\r\n                              });\r\n\r\n                              return onSuccess(shipsArray);\r\n                        })\r\n                        // Error\r\n                        .catch(error => {\r\n                              onError(error);\r\n                        })\r\n            }\r\n\r\n            catch (error) {\r\n                  return onError(error);\r\n            }\r\n      }\r\n}\r\n\r\nexport default fetchShips;","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport fetchShipsAction from '../actions/fetchShips';\r\nimport { getShips } from '../reducers/index';\r\nimport Loader from 'react-loader-spinner'\r\n\r\nclass Ships extends Component {\r\n\r\n      componentDidMount() {\r\n            const { fetchShips } = this.props;\r\n            fetchShips();\r\n      }\r\n\r\n      render() {\r\n\r\n            const { ships } = this.props;\r\n\r\n            if (!ships) {\r\n                  return (\r\n                        <Loader type='ThreeDots' color='#F4DC39' height={40} width={40} />\r\n                  )\r\n            }\r\n\r\n            let ini = this.props.item;\r\n            let end = ini + 1;\r\n\r\n            return (\r\n                  <div className='list'>\r\n                        {ships.slice(ini, end).map(ship => (\r\n                              <ul key={ship[3]}>\r\n                                    <li>\r\n                                          <i class=\"far fa-star fa-2x\"></i>\r\n                                          <h3><Link className=\"link-style\" to={`/starship/${ship[3]}`}>{ship[0]}</Link></h3>\r\n                                          <h4> Model: {ship[1]} </h4>\r\n                                          <h4> Class: {ship[2]} </h4>\r\n                                    </li>\r\n                              </ul>\r\n                        ))}\r\n                  </div>\r\n            );\r\n      }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n      ships: getShips(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n      fetchShips: fetchShipsAction\r\n}, dispatch)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Ships);","import React, { Component } from \"react\";\r\n\r\nclass Pagination extends Component {\r\n\r\n      render() {\r\n\r\n            const { item, onNext, onPrevious } = this.props;\r\n\r\n            return (\r\n                  <div>\r\n                        {item !== 0 &&\r\n                              <span onClick={() => onPrevious()} className=\"pageButton\">\r\n                                    <i class=\"fas fa-chevron-circle-left\"></i>\r\n                              </span>}\r\n\r\n                        {item !== 9 &&\r\n                              <span onClick={() => onNext()} className=\"pageButton\">\r\n                                    <i class=\"fas fa-chevron-circle-right\"></i>\r\n                              </span>}\r\n                  </div>\r\n            );\r\n      }\r\n}\r\n\r\nexport default Pagination;","import { loadCharacter } from './index';\r\nimport { loadError } from './index';\r\n\r\nfunction fetchCharacter(id) {\r\n\r\n      return dispatch => {\r\n\r\n            function onSuccess(characterArray) {\r\n                  dispatch(loadCharacter(characterArray));\r\n                  return characterArray;\r\n            }\r\n\r\n            function onError(error) {\r\n                  dispatch(loadError(error));\r\n                  return error;\r\n            }\r\n\r\n            try {\r\n\r\n                  fetch('https://swapi.dev/api/people/' + id)\r\n\r\n                        // Access with success, put the information in data\r\n                        .then(data => data.json())\r\n\r\n                        // Format each data to the format array line to show\r\n                        .then(d => {\r\n\r\n                              let characterArray =\r\n                                    [\r\n                                          d.name,\r\n                                          d.height,\r\n                                          d.mass,\r\n                                          d.hair_color,\r\n                                          d.skin_color,\r\n                                          d.eye_color,\r\n                                          d.birth_year,\r\n                                          d.gender,\r\n                                    ]\r\n\r\n                              return onSuccess(characterArray);\r\n                        })\r\n                        // Error\r\n                        .catch(error => {\r\n                              onError(error);\r\n                        })\r\n            }\r\n\r\n            catch (error) {\r\n                  return onError(error);\r\n            }\r\n      }\r\n}\r\n\r\nexport default fetchCharacter;","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport fetchCharacterAction from '../actions/fetchCharacter';\r\nimport { getCharacter } from '../reducers/index';\r\nimport Loader from 'react-loader-spinner'\r\n\r\nclass Character extends Component {\r\n\r\n      componentDidMount() {\r\n            let id = this.props.match.params.id;\r\n            const { fetchCharacter } = this.props;\r\n            fetchCharacter(id);\r\n      }\r\n\r\n      render() {\r\n\r\n            const { character } = this.props;\r\n\r\n            if (!character) {\r\n                  return (\r\n                        <Loader type='ThreeDots' color='#F4DC39' height={40} width={40} />\r\n                  )\r\n            }\r\n\r\n            return (\r\n                  <div className='gray-box'>\r\n                        <div className='box'>\r\n                              <i class=\"far fa-user fa-2x\"></i>\r\n                              <h3> {character[0]} </h3>\r\n                              <h4> Height: {character[1]} </h4>\r\n                              <h4> Mass: {character[2]} </h4>\r\n                              <h4> Hair Color: {character[3]} </h4>\r\n                              <h4> Skin Color: {character[4]} </h4>\r\n                              <h4> Eye Color: {character[5]} </h4>\r\n                              <h4> Birth Year: {character[6]} </h4>\r\n                              <h4> Gender: {character[7]} </h4>\r\n                              <Link className=\"link-style\" to='/StarWars'>\r\n                                    <i class=\"fas fa-reply\"></i>\r\n                              </Link>\r\n                        </div>\r\n                  </div>\r\n            );\r\n      }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n      character: getCharacter(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n      fetchCharacter: fetchCharacterAction\r\n}, dispatch)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Character);","import { loadStarship } from './index';\r\nimport { loadError } from './index';\r\n\r\nfunction fetchStarship(id) {\r\n\r\n      return dispatch => {\r\n\r\n            function onSuccess(starshipArray) {\r\n                  dispatch(loadStarship(starshipArray));\r\n                  return starshipArray;\r\n            }\r\n\r\n            function onError(error) {\r\n                  dispatch(loadError(error));\r\n                  return error;\r\n            }\r\n\r\n            try {\r\n                  fetch('https://swapi.dev/api/starships/' + id)\r\n\r\n                        // Access with success, put the information in data\r\n                        .then(data => data.json())\r\n\r\n                        // Format each data to the format array line to show\r\n                        .then(d => {\r\n\r\n                              let starshipArray =\r\n                                    [\r\n                                          d.name,\r\n                                          d.model,\r\n                                          d.starship_class,\r\n                                    ]\r\n\r\n                              return onSuccess(starshipArray);\r\n                        })\r\n                        // Error\r\n                        .catch(error => {\r\n                              onError(error);\r\n                        })\r\n\r\n            }\r\n\r\n            catch (error) {\r\n                  return onError(error);\r\n            }\r\n      }\r\n}\r\n\r\nexport default fetchStarship;","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport fetchStarshipAction from '../actions/fetchStarship';\r\nimport { getStarship } from '../reducers/index';\r\nimport Loader from 'react-loader-spinner'\r\n\r\nclass Starship extends Component {\r\n\r\n      componentDidMount() {\r\n            let id = this.props.match.params.id;\r\n            const { fetchStarship } = this.props;\r\n            fetchStarship(id);\r\n      }\r\n\r\n      render() {\r\n\r\n            const { starship } = this.props;\r\n\r\n            if (!starship) {\r\n                  return (\r\n                        <Loader type='ThreeDots' color='#F4DC39' height={80} width={80} />\r\n                  )\r\n            }\r\n\r\n            return (\r\n                  <div className='gray-box'>\r\n                        <div className='box'>\r\n                              <i class=\"far fa-star fa-2x\"></i>\r\n                              <h3> {starship[0]} </h3>\r\n                              <h4> Model: {starship[1]} </h4>\r\n                              <h4> Class: {starship[2]} </h4>\r\n                              <Link className=\"link-style\" to='/StarWars'>\r\n                                    <i class=\"fas fa-reply\"></i>\r\n                              </Link>\r\n                        </div>\r\n                  </div>\r\n            );\r\n      }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n      starship: getStarship(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n      fetchStarship: fetchStarshipAction\r\n}, dispatch)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Starship);","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n      return (\r\n            <div className='footer'>\r\n                  <div className='row'>\r\n                        <div className='col'>\r\n\r\n                              <ul>\r\n                                    <li>\r\n                                          <a href='https://www.linkedin.com/in/2karla/'>\r\n                                                <i class=\"fab fa-linkedin fa-2x\"></i></a>\r\n                                    </li>\r\n                                    <li>\r\n                                          <a href='\"https://github.com/Karla-Rodrigues'>\r\n                                                <i class=\"fab fa-github-square fa-2x\"></i></a>\r\n                                    </li>\r\n                                    <li>\r\n                                          <a href='mailto:karlaadautor@gmail.com'>\r\n                                                <i class=\"fas fa-envelope fa-2x\"></i></a>\r\n                                    </li>\r\n                              </ul>\r\n\r\n                              <p className=\"footer\" >&copy;&nbsp;Copyright Karla Rodrigues</p>\r\n\r\n                        </div>\r\n                  </div>\r\n            </div>\r\n      );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport './index.css';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Banner from './components/banner';\r\nimport People from './components/people';\r\nimport Ships from './components/ships';\r\nimport Pagination from './components/pagination';\r\nimport Character from './components/character';\r\nimport Starship from './components/starship';\r\nimport Footer from './components/footer';\r\n\r\nclass App extends Component {\r\n\r\n      state = {\r\n            item: 0,\r\n\r\n      }\r\n\r\n      handleNext = () => {\r\n            let item = this.state.item;\r\n            item += 1;\r\n            this.setState({ item });\r\n      };\r\n\r\n      handlePrevious = () => {\r\n            let item = this.state.item;\r\n            if (item > 0) {\r\n                  item -= 1;\r\n            }\r\n            this.setState({ item });\r\n      };\r\n\r\n      render() {\r\n            return (\r\n                  <Router>\r\n                        <div className='App'>\r\n                              <div className='container'>\r\n                                    <Route exact path={'/StarWars'} render={props => (\r\n                                          <React.Fragment>\r\n                                                <Banner />\r\n                                                <People item={this.state.item} />\r\n                                                <Ships item={this.state.item} />\r\n                                                <Pagination item={this.state.item} onNext={this.handleNext} onPrevious={this.handlePrevious} />\r\n                                                <Footer />\r\n                                          </React.Fragment>\r\n                                    )} />\r\n                                    <Route exact path={'/character/:id'} render={props => (\r\n                                          <React.Fragment>\r\n                                                <Banner />\r\n                                                <Character {...props} />\r\n                                                <Footer />\r\n                                          </React.Fragment>\r\n                                    )} />\r\n                                    <Route exact path={'/starship/:id'} render={props => (\r\n                                          <React.Fragment>\r\n                                                <Banner />\r\n                                                <Starship {...props} />\r\n                                                <Footer />\r\n                                          </React.Fragment>\r\n                                    )} />\r\n                              </div>\r\n                        </div>\r\n                  </Router>\r\n            );\r\n      }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers/index';\nimport App from './App';\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}