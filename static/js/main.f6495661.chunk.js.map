{"version":3,"sources":["actions/actiontypes.js","reducers/index.js","components/logo.png","components/banner.jsx","actions/index.js","actions/fetchPeople.js","components/people.jsx","actions/fetchShips.js","components/ships.jsx","components/pagination.jsx","actions/fetchCharacter.js","components/character.jsx","actions/fetchStarship.js","components/starship.jsx","components/footer.jsx","App.js","index.js"],"names":["LOAD1_PEOPLE","LOADN_PEOPLE","LOAD_SHIPS","LOAD_CHARACTER","LOAD_STARSHIP","LOAD_ERROR","initialState","swapi","getPeople","state","people","getShips","ships","getCharacter","character","getStarship","starship","SwapiReducer","action","type","error","Banner","className","src","logo","alt","Component","loadPeople","page","loadError","fetchPeople","dispatch","onSuccess","onError","a","peopleArray","fetch","then","data","json","d","results","map","person","name","height","mass","birth_year","url","substring","console","log","next","catch","People","this","props","color","width","ini","item","end","slice","class","to","connect","bindActionCreators","fetchPeopleAction","fetchShips","shipsArray","ship","model","starship_class","Ships","fetchShipsAction","Pagination","onNext","onPrevious","onClick","fetchCharacter","id","characterArray","hair_color","skin_color","eye_color","gender","Character","match","params","fetchCharacterAction","fetchStarship","starshipArray","Starship","fetchStarshipAction","Footer","href","App","handleNext","setState","handlePrevious","exact","path","render","Fragment","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6495661.chunk.js","sourcesContent":["export const LOAD1_PEOPLE = 'LOAD1_PEOPLE'\r\nexport const LOADN_PEOPLE = 'LOADN_PEOPLE'\r\nexport const LOAD_SHIPS = 'LOAD_SHIPS'\r\nexport const LOAD_CHARACTER = 'LOAD_CHARACTER'\r\nexport const LOAD_STARSHIP = 'LOAD_STARSHIP'\r\nexport const LOAD_ERROR = 'LOAD_ERROR'","import { LOADN_PEOPLE } from '../actions/actiontypes';\r\nimport { LOAD1_PEOPLE } from '../actions/actiontypes';\r\nimport { LOAD_SHIPS } from '../actions/actiontypes';\r\nimport { LOAD_CHARACTER } from '../actions/actiontypes';\r\nimport { LOAD_STARSHIP } from '../actions/actiontypes';\r\nimport { LOAD_ERROR } from '../actions/actiontypes';\r\n\r\n\r\nconst initialState = {\r\n      swapi: [],\r\n}\r\n\r\nfunction SwapiReducer(state = initialState, action) {\r\n\r\n      switch (action.type) {\r\n            case LOAD1_PEOPLE:\r\n                  return {\r\n                        ...state,\r\n                        people: action.people\r\n                  }\r\n            case LOADN_PEOPLE:\r\n                  return {\r\n                        ...state,\r\n                        people: [...state.people, ...action.people]\r\n                  }\r\n            case LOAD_SHIPS:\r\n                  return {\r\n                        ...state,\r\n                        ships: action.ships\r\n                  }\r\n            case LOAD_CHARACTER:\r\n                  return {\r\n                        ...state,\r\n                        character: action.character\r\n                  }\r\n            case LOAD_STARSHIP:\r\n                  return {\r\n                        ...state,\r\n                        starship: action.starship\r\n                  }\r\n            case LOAD_ERROR:\r\n                  return {\r\n                        ...state,\r\n                        error: action.error\r\n                  }\r\n            default:\r\n                  return state;\r\n      }\r\n}\r\n\r\nexport const getPeople = state => state.people;\r\nexport const getShips = state => state.ships;\r\nexport const getCharacter = state => state.character;\r\nexport const getStarship = state => state.starship;\r\n\r\nexport default SwapiReducer;","export default __webpack_public_path__ + \"static/media/logo.206d045b.png\";","import React, { Component } from \"react\";\r\nimport logo from './logo.png';\r\n\r\nclass Banner extends Component {\r\n      state = {};\r\n      render() {\r\n            return (\r\n                  <div className='banner'>\r\n                       <img src={logo} alt='logo' />\r\n                  </div>\r\n            );\r\n      }\r\n}\r\n\r\nexport default Banner;","import { LOAD1_PEOPLE } from './actiontypes';\r\nimport { LOADN_PEOPLE } from './actiontypes';\r\nimport { LOAD_SHIPS } from './actiontypes';\r\nimport { LOAD_CHARACTER } from './actiontypes';\r\nimport { LOAD_STARSHIP } from './actiontypes';\r\nimport { LOAD_ERROR } from './actiontypes';\r\n\r\n\r\nexport function loadPeople(page, people) {\r\n    if (page === 1) {\r\n        return {\r\n            type: LOAD1_PEOPLE,\r\n            people: people\r\n        }\r\n    } else {\r\n        return {\r\n            type: LOADN_PEOPLE,\r\n            people: people\r\n        }\r\n    }\r\n}\r\n\r\nexport function loadShips(ships) {\r\n    return {\r\n        type: LOAD_SHIPS,\r\n        ships: ships\r\n    }\r\n}\r\n\r\nexport function loadCharacter(character) {\r\n    return {\r\n        type: LOAD_CHARACTER,\r\n        character: character\r\n    }\r\n}\r\n\r\nexport function loadStarship(starship) {\r\n    return {\r\n        type: LOAD_STARSHIP,\r\n        starship: starship\r\n    }\r\n}\r\n\r\nexport function loadError(error) {\r\n    return {\r\n        type: LOAD_ERROR,\r\n        error: error\r\n    }\r\n}","import { loadPeople } from './index';\r\nimport { loadError } from './index';\r\n\r\nfunction fetchPeople(page) {\r\n\r\n      return async dispatch => {\r\n\r\n            function onSuccess(page, peopleArray) {\r\n                  dispatch(loadPeople(page, peopleArray));\r\n                  return peopleArray;\r\n            }\r\n\r\n            function onError(error) {\r\n\r\n                  dispatch(loadError(error));\r\n                  return error;\r\n            }\r\n\r\n            try {\r\n\r\n                  fetch('https://swapi.dev/api/people/?page=' + page)\r\n\r\n                        // Access with success, put the information in data\r\n                        .then(data => data.json())\r\n\r\n                        // Format each data to the format array line to show\r\n                        .then(d => {\r\n\r\n                              let peopleArray = d.results.map((person) => {\r\n\r\n                                    return (\r\n                                          [\r\n                                                person.name,\r\n                                                person.height,\r\n                                                person.mass,\r\n                                                person.birth_year,\r\n                                                person.url.substring(28),\r\n                                          ]\r\n                                    )\r\n\r\n                              });\r\n\r\n                              console.log(d.next.substring(34));\r\n\r\n                              return onSuccess(page, peopleArray);\r\n                        })\r\n                        // Error\r\n                        .catch(error => {\r\n                              onError(error);\r\n                        })\r\n            }\r\n\r\n            catch (error) {\r\n                  return onError(error);\r\n            }\r\n      }\r\n}\r\n\r\nexport default fetchPeople;","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport fetchPeopleAction from '../actions/fetchPeople';\r\nimport { getPeople } from '../reducers/index';\r\nimport Loader from 'react-loader-spinner'\r\n\r\nclass People extends Component {\r\n\r\n      componentDidMount() {\r\n            const { fetchPeople } = this.props;\r\n            fetchPeople(1);\r\n            fetchPeople(2);\r\n            fetchPeople(3);\r\n            fetchPeople(4);\r\n            fetchPeople(5);\r\n            fetchPeople(6);\r\n            fetchPeople(7);\r\n            fetchPeople(8);\r\n      }\r\n\r\n      render() {\r\n\r\n            const { people } = this.props;\r\n\r\n            if (!people) {\r\n                  return (\r\n                        <Loader type='ThreeDots' color='#F4DC39' height={40} width={40} />\r\n                  )\r\n            }\r\n\r\n            let ini = this.props.item * 8;\r\n            let end = ini + 8;\r\n\r\n            return (\r\n                  <div className='list'>\r\n                        {people.slice(ini, end).map(person => (\r\n                              <ul key={person[4]}>\r\n                                    <li >\r\n                                          <i class=\"far fa-user fa-2x\"></i>\r\n                                          <h3><Link className=\"link-style\" to={`/character/${person[4]}`}>{person[0]}</Link></h3>\r\n                                          <h4> Height: {person[1]} </h4>\r\n                                          <h4> Mass: {person[2]} </h4>\r\n                                          <h4> Birth Year: {person[3]} </h4>\r\n                                    </li>\r\n                              </ul>\r\n                        ))}\r\n                  </div>\r\n            );\r\n      }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n      people: getPeople(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n      fetchPeople: fetchPeopleAction\r\n}, dispatch)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(People);","import { loadShips } from './index';\r\nimport { loadError } from './index';\r\n\r\nfunction fetchShips() {\r\n\r\n      return async dispatch => {\r\n\r\n            function onSuccess(shipsArray) {\r\n                  dispatch(loadShips(shipsArray));\r\n                  return shipsArray;\r\n            }\r\n\r\n            function onError(error) {\r\n                  dispatch(loadError(error));\r\n                  return error;\r\n            }\r\n\r\n            try {\r\n                  await fetch('https://swapi.dev/api/starships/')\r\n\r\n                        // Access with success, put the information in data\r\n                        .then(data => data.json())\r\n\r\n                        // Format each data to the format array line to show\r\n                        .then(d => {\r\n\r\n                              let shipsArray = d.results.map((ship) => {\r\n\r\n                                    return (\r\n                                          [\r\n                                                ship.name,\r\n                                                ship.model,\r\n                                                ship.starship_class,\r\n                                                ship.url.substring(31),\r\n                                          ]\r\n                                    )\r\n\r\n                              });\r\n\r\n                              return onSuccess(shipsArray);\r\n                        })\r\n                        // Error\r\n                        .catch(error => {\r\n                              onError(error);\r\n                        })\r\n            }\r\n\r\n            catch (error) {\r\n                  return onError(error);\r\n            }\r\n      }\r\n}\r\n\r\nexport default fetchShips;","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport fetchShipsAction from '../actions/fetchShips';\r\nimport { getShips } from '../reducers/index';\r\nimport Loader from 'react-loader-spinner'\r\n\r\nclass Ships extends Component {\r\n\r\n      componentDidMount() {\r\n            const { fetchShips } = this.props;\r\n            fetchShips();\r\n      }\r\n\r\n      render() {\r\n\r\n            const { ships } = this.props;\r\n\r\n            if (!ships) {\r\n                  return (\r\n                        <Loader type='ThreeDots' color='#F4DC39' height={40} width={40} />\r\n                  )\r\n            }\r\n\r\n            let ini = this.props.item;\r\n            let end = ini + 1;\r\n\r\n            return (\r\n                  <div className='list'>\r\n                        {ships.slice(ini, end).map(ship => (\r\n                              <ul key={ship[3]}>\r\n                                    <li>\r\n                                          <i class=\"far fa-star fa-2x\"></i>\r\n                                          <h3><Link className=\"link-style\" to={`/starship/${ship[3]}`}>{ship[0]}</Link></h3>\r\n                                          <h4> Model: {ship[1]} </h4>\r\n                                          <h4> Class: {ship[2]} </h4>\r\n                                    </li>\r\n                              </ul>\r\n                        ))}\r\n                  </div>\r\n            );\r\n      }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n      ships: getShips(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n      fetchShips: fetchShipsAction\r\n}, dispatch)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Ships);","import React, { Component } from \"react\";\r\n\r\nclass Pagination extends Component {\r\n\r\n      render() {\r\n\r\n            const { item, onNext, onPrevious } = this.props;\r\n\r\n            return (\r\n                  <div>\r\n                        {item !== 0 &&\r\n                              <span onClick={() => onPrevious()} className=\"pageButton\">\r\n                                    <i class=\"fas fa-chevron-circle-left\"></i>\r\n                              </span>}\r\n\r\n                        {item !== 11 &&\r\n                              <span onClick={() => onNext()} className=\"pageButton\">\r\n                                    <i class=\"fas fa-chevron-circle-right\"></i>\r\n                              </span>}\r\n                  </div>\r\n            );\r\n      }\r\n}\r\n\r\nexport default Pagination;","import { loadCharacter } from './index';\r\nimport { loadError } from './index';\r\n\r\nfunction fetchCharacter(id) {\r\n\r\n      return async dispatch => {\r\n\r\n            function onSuccess(characterArray) {\r\n                  dispatch(loadCharacter(characterArray));\r\n                  return characterArray;\r\n            }\r\n\r\n            function onError(error) {\r\n                  dispatch(loadError(error));\r\n                  return error;\r\n            }\r\n\r\n            try {\r\n\r\n                  await fetch('https://swapi.dev/api/people/' + id)\r\n\r\n                        // Access with success, put the information in data\r\n                        .then(data => data.json())\r\n\r\n                        // Format each data to the format array line to show\r\n                        .then(d => {\r\n\r\n                              let characterArray =\r\n                                    [\r\n                                          d.name,\r\n                                          d.height,\r\n                                          d.mass,\r\n                                          d.hair_color,\r\n                                          d.skin_color,\r\n                                          d.eye_color,\r\n                                          d.birth_year,\r\n                                          d.gender,\r\n                                    ]\r\n\r\n                              return onSuccess(characterArray);\r\n                        })\r\n                        // Error\r\n                        .catch(error => {\r\n                              onError(error);\r\n                        })\r\n            }\r\n\r\n            catch (error) {\r\n                  return onError(error);\r\n            }\r\n      }\r\n}\r\n\r\nexport default fetchCharacter;","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport fetchCharacterAction from '../actions/fetchCharacter';\r\nimport { getCharacter } from '../reducers/index';\r\nimport Loader from 'react-loader-spinner'\r\n\r\nclass Character extends Component {\r\n\r\n      componentDidMount() {\r\n            let id = this.props.match.params.id;\r\n            const { fetchCharacter } = this.props;\r\n            fetchCharacter(id);\r\n      }\r\n\r\n      render() {\r\n\r\n            const { character } = this.props;\r\n\r\n            if (!character) {\r\n                  return (\r\n                        <Loader type='ThreeDots' color='#F4DC39' height={40} width={40} />\r\n                  )\r\n            }\r\n\r\n            return (\r\n                  <div className='gray-box'>\r\n                        <div className='gray-box'>\r\n                              <i class=\"far fa-user fa-2x\"></i>\r\n                              <h3> {character[0]} </h3>\r\n                              <h4> Height: {character[1]} </h4>\r\n                              <h4> Mass: {character[2]} </h4>\r\n                              <h4> Hair Color: {character[3]} </h4>\r\n                              <h4> Skin Color: {character[4]} </h4>\r\n                              <h4> Eye Color: {character[5]} </h4>\r\n                              <h4> Birth Year: {character[6]} </h4>\r\n                              <h4> Gender: {character[7]} </h4>\r\n                              <Link className=\"link-style2\" to='/StarWars'>\r\n                                    <i class=\"fas fa-reply\"></i>\r\n                              </Link>\r\n                        </div>\r\n                  </div>\r\n            );\r\n      }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n      character: getCharacter(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n      fetchCharacter: fetchCharacterAction\r\n}, dispatch)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Character);","import { loadStarship } from './index';\r\nimport { loadError } from './index';\r\n\r\nfunction fetchStarship(id) {\r\n\r\n      return async dispatch => {\r\n\r\n            function onSuccess(starshipArray) {\r\n                  dispatch(loadStarship(starshipArray));\r\n                  return starshipArray;\r\n            }\r\n\r\n            function onError(error) {\r\n                  dispatch(loadError(error));\r\n                  return error;\r\n            }\r\n\r\n            try {\r\n                  await fetch('https://swapi.dev/api/starships/' + id)\r\n\r\n                        // Access with success, put the information in data\r\n                        .then(data => data.json())\r\n\r\n                        // Format each data to the format array line to show\r\n                        .then(d => {\r\n\r\n                              let starshipArray =\r\n                                    [\r\n                                          d.name,\r\n                                          d.model,\r\n                                          d.starship_class,\r\n                                    ]\r\n\r\n                              return onSuccess(starshipArray);\r\n                        })\r\n                        // Error\r\n                        .catch(error => {\r\n                              onError(error);\r\n                        })\r\n\r\n            }\r\n\r\n            catch (error) {\r\n                  return onError(error);\r\n            }\r\n      }\r\n}\r\n\r\nexport default fetchStarship;","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport fetchStarshipAction from '../actions/fetchStarship';\r\nimport { getStarship } from '../reducers/index';\r\nimport Loader from 'react-loader-spinner'\r\n\r\nclass Starship extends Component {\r\n\r\n      componentDidMount() {\r\n            let id = this.props.match.params.id;\r\n            const { fetchStarship } = this.props;\r\n            fetchStarship(id);\r\n      }\r\n\r\n      render() {\r\n\r\n            const { starship } = this.props;\r\n\r\n            if (!starship) {\r\n                  return (\r\n                        <Loader type='ThreeDots' color='#F4DC39' height={80} width={80} />\r\n                  )\r\n            }\r\n\r\n            return (\r\n                  <div className='gray-box'>\r\n                        <div className='gray-box'>\r\n                              <i class=\"far fa-star fa-2x\"></i>\r\n                              <h3> {starship[0]} </h3>\r\n                              <h4> Model: {starship[1]} </h4>\r\n                              <h4> Class: {starship[2]} </h4>\r\n                              <Link className=\"link-style2\" to='/StarWars'>\r\n                                    <i class=\"fas fa-reply\"></i>\r\n                              </Link>\r\n                        </div>\r\n                  </div>\r\n            );\r\n      }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n      starship: getStarship(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n      fetchStarship: fetchStarshipAction\r\n}, dispatch)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Starship);","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n      return (\r\n            <div className='footer'>\r\n                  <div className='row'>\r\n                        <div className='col'>\r\n\r\n                              <ul>\r\n                                    <li>\r\n                                          <a href='https://www.linkedin.com/in/2karla/'>\r\n                                                <i class=\"fab fa-linkedin fa-2x\"></i></a>\r\n                                    </li>\r\n                                    <li>\r\n                                          <a href='\"https://github.com/Karla-Rodrigues'>\r\n                                                <i class=\"fab fa-github-square fa-2x\"></i></a>\r\n                                    </li>\r\n                                    <li>\r\n                                          <a href='mailto:karlaadautor@gmail.com'>\r\n                                                <i class=\"fas fa-envelope fa-2x\"></i></a>\r\n                                    </li>\r\n                              </ul>\r\n\r\n                              <p className=\"footer\" >&copy;&nbsp;Copyright Karla Rodrigues</p>\r\n\r\n                        </div>\r\n                  </div>\r\n            </div>\r\n      );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport './index.css';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Banner from './components/banner';\r\nimport People from './components/people';\r\nimport Ships from './components/ships';\r\nimport Pagination from './components/pagination';\r\nimport Character from './components/character';\r\nimport Starship from './components/starship';\r\nimport Footer from './components/footer';\r\n\r\nclass App extends Component {\r\n\r\n      state = {\r\n            item: 0,\r\n\r\n      }\r\n\r\n      handleNext = () => {\r\n            let item = this.state.item;\r\n            item += 1;\r\n            this.setState({ item });\r\n      };\r\n\r\n      handlePrevious = () => {\r\n            let item = this.state.item;\r\n            if (item > 0) {\r\n                  item -= 1;\r\n            }\r\n            this.setState({ item });\r\n      };\r\n\r\n      render() {\r\n            return (\r\n                  <Router>\r\n                        <div className='App'>\r\n                              <div className='container'>\r\n                                    <Route exact path={'/StarWars'} render={props => (\r\n                                          <React.Fragment>\r\n                                                <Banner />\r\n                                                <People item={this.state.item} />\r\n                                                <Ships item={this.state.item} />\r\n                                                <Pagination onNext={this.handleNext} onPrevious={this.handlePrevious} />\r\n                                                <Footer />\r\n                                          </React.Fragment>\r\n                                    )} />\r\n                                    <Route exact path={'/character/:id'} render={props => (\r\n                                          <React.Fragment>\r\n                                                <Banner />\r\n                                                <Character {...props} />\r\n                                                <Footer />\r\n                                          </React.Fragment>\r\n                                    )} />\r\n                                    <Route exact path={'/starship/:id'} render={props => (\r\n                                          <React.Fragment>\r\n                                                <Banner />\r\n                                                <Starship {...props} />\r\n                                                <Footer />\r\n                                          </React.Fragment>\r\n                                    )} />\r\n                              </div>\r\n                        </div>\r\n                  </Router>\r\n            );\r\n      }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers/index';\nimport App from './App';\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}